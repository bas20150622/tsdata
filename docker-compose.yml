version: '3.8'
services:
  python:
    build: ./src
    env_file: .env
    volumes:
      - ./src/:/usr/src/script/
    depends_on:
      - timescale

  timescale:
    image: timescale/timescaledb:1.7.4-pg12
    env_file: .env
    volumes:
      - type: volume
        source: timescale_volume_test
        target: /var/lib/postgresql/data
        read_only: false
      - type: bind
        source: ./postgresql_custom.conf
        target: /postgresql_custom.conf
        read_only: false
    command: [ "-c", "config_file=/postgresql_custom.conf" ]
    restart: on-failure
    ports:
      - 5432:5432

  db_admin:
    image: "dpage/pgadmin4:latest"
    env_file: .env
    volumes:
      - pgadmin_test:/var/lib/pgadmin
    ports:
      - 0.0.0.0:9000:9000

  grafana:
    ## https://hub.docker.com/r/grafana/grafana/
    image: grafana/grafana:7.3.6
    user: "0"
    environment:
      ## https://grafana.com/docs/grafana/latest/installation/configuration/#configure-with-environment-variables
      ## https://grafana.com/docs/grafana/latest/installation/configure-docker/
      # GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource,natel-influx-admin-panel
      - GF_INSTALL_PLUGINS=grafana-simple-json-datasource,natel-influx-admin-panel
      ## https://grafana.com/docs/grafana/latest/auth/overview/
      #- GF_AUTH_ANONYMOUS_ENABLED=true
      #- GF_AUTH_ANONYMOUS_ORG_NAME=GuestOrg
      #- GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      #- GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - 3000:3000

volumes:
  timescale_volume_test:
  pgadmin_test:
